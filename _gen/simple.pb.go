// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: simple.proto

/*
Package _gen is a generated protocol buffer package.

It is generated from these files:
	simple.proto

It has these top-level messages:
	Person
	Employee
	Mixed
*/
package _gen

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// example enum
type Mixed_Corpus int32

const (
	Mixed_UNIVERSAL Mixed_Corpus = 0
	Mixed_WEB       Mixed_Corpus = 1
	Mixed_IMAGES    Mixed_Corpus = 2
	Mixed_LOCAL     Mixed_Corpus = 3
	Mixed_NEWS      Mixed_Corpus = 4
	Mixed_PRODUCTS  Mixed_Corpus = 5
	Mixed_VIDEO     Mixed_Corpus = 6
)

var Mixed_Corpus_name = map[int32]string{
	0: "UNIVERSAL",
	1: "WEB",
	2: "IMAGES",
	3: "LOCAL",
	4: "NEWS",
	5: "PRODUCTS",
	6: "VIDEO",
}
var Mixed_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
}

func (x Mixed_Corpus) String() string {
	return proto.EnumName(Mixed_Corpus_name, int32(x))
}
func (Mixed_Corpus) EnumDescriptor() ([]byte, []int) { return fileDescriptorSimple, []int{2, 0} }

// Person is a simple structure to start parsing
type Person struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age   int32  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptorSimple, []int{0} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// Employee shows embedding on structure
type Employee struct {
	Title  string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Person *Person `protobuf:"bytes,2,opt,name=person" json:"person,omitempty"`
}

func (m *Employee) Reset()                    { *m = Employee{} }
func (m *Employee) String() string            { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()               {}
func (*Employee) Descriptor() ([]byte, []int) { return fileDescriptorSimple, []int{1} }

func (m *Employee) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Employee) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

// Mixed tries to express all basic protobuf fields
// Use to test we support all types
type Mixed struct {
	Flt  float32      `protobuf:"fixed32,1,opt,name=flt,proto3" json:"flt,omitempty"`
	Dbl  float64      `protobuf:"fixed64,2,opt,name=dbl,proto3" json:"dbl,omitempty"`
	I32  int32        `protobuf:"varint,3,opt,name=i32,proto3" json:"i32,omitempty"`
	I64  int64        `protobuf:"varint,4,opt,name=i64,proto3" json:"i64,omitempty"`
	U32  uint32       `protobuf:"varint,5,opt,name=u32,proto3" json:"u32,omitempty"`
	U64  uint64       `protobuf:"varint,6,opt,name=u64,proto3" json:"u64,omitempty"`
	S32  int32        `protobuf:"zigzag32,7,opt,name=s32,proto3" json:"s32,omitempty"`
	S64  int64        `protobuf:"zigzag64,8,opt,name=s64,proto3" json:"s64,omitempty"`
	F32  uint32       `protobuf:"fixed32,9,opt,name=f32,proto3" json:"f32,omitempty"`
	F64  uint64       `protobuf:"fixed64,10,opt,name=f64,proto3" json:"f64,omitempty"`
	Sf32 int32        `protobuf:"fixed32,11,opt,name=sf32,proto3" json:"sf32,omitempty"`
	Sf64 int64        `protobuf:"fixed64,12,opt,name=sf64,proto3" json:"sf64,omitempty"`
	B    bool         `protobuf:"varint,13,opt,name=b,proto3" json:"b,omitempty"`
	S    string       `protobuf:"bytes,14,opt,name=s,proto3" json:"s,omitempty"`
	Bz   []byte       `protobuf:"bytes,15,opt,name=bz,proto3" json:"bz,omitempty"`
	En   Mixed_Corpus `protobuf:"varint,16,opt,name=en,proto3,enum=_gen.Mixed_Corpus" json:"en,omitempty"`
}

func (m *Mixed) Reset()                    { *m = Mixed{} }
func (m *Mixed) String() string            { return proto.CompactTextString(m) }
func (*Mixed) ProtoMessage()               {}
func (*Mixed) Descriptor() ([]byte, []int) { return fileDescriptorSimple, []int{2} }

func (m *Mixed) GetFlt() float32 {
	if m != nil {
		return m.Flt
	}
	return 0
}

func (m *Mixed) GetDbl() float64 {
	if m != nil {
		return m.Dbl
	}
	return 0
}

func (m *Mixed) GetI32() int32 {
	if m != nil {
		return m.I32
	}
	return 0
}

func (m *Mixed) GetI64() int64 {
	if m != nil {
		return m.I64
	}
	return 0
}

func (m *Mixed) GetU32() uint32 {
	if m != nil {
		return m.U32
	}
	return 0
}

func (m *Mixed) GetU64() uint64 {
	if m != nil {
		return m.U64
	}
	return 0
}

func (m *Mixed) GetS32() int32 {
	if m != nil {
		return m.S32
	}
	return 0
}

func (m *Mixed) GetS64() int64 {
	if m != nil {
		return m.S64
	}
	return 0
}

func (m *Mixed) GetF32() uint32 {
	if m != nil {
		return m.F32
	}
	return 0
}

func (m *Mixed) GetF64() uint64 {
	if m != nil {
		return m.F64
	}
	return 0
}

func (m *Mixed) GetSf32() int32 {
	if m != nil {
		return m.Sf32
	}
	return 0
}

func (m *Mixed) GetSf64() int64 {
	if m != nil {
		return m.Sf64
	}
	return 0
}

func (m *Mixed) GetB() bool {
	if m != nil {
		return m.B
	}
	return false
}

func (m *Mixed) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

func (m *Mixed) GetBz() []byte {
	if m != nil {
		return m.Bz
	}
	return nil
}

func (m *Mixed) GetEn() Mixed_Corpus {
	if m != nil {
		return m.En
	}
	return Mixed_UNIVERSAL
}

func init() {
	proto.RegisterType((*Person)(nil), "_gen.Person")
	proto.RegisterType((*Employee)(nil), "_gen.Employee")
	proto.RegisterType((*Mixed)(nil), "_gen.Mixed")
	proto.RegisterEnum("_gen.Mixed_Corpus", Mixed_Corpus_name, Mixed_Corpus_value)
}

func init() { proto.RegisterFile("simple.proto", fileDescriptorSimple) }

var fileDescriptorSimple = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x92, 0x4f, 0x6b, 0xdb, 0x4c,
	0x10, 0x87, 0xdf, 0xd1, 0x3f, 0xcb, 0x13, 0xd9, 0xd9, 0x77, 0xe9, 0x61, 0x8f, 0x8b, 0xe8, 0x61,
	0x4f, 0x3e, 0x48, 0x42, 0x77, 0xd7, 0x56, 0x8b, 0xc1, 0x89, 0xc3, 0xb8, 0x49, 0xa0, 0x97, 0x62,
	0x91, 0x6d, 0x10, 0xc8, 0x92, 0xb0, 0x1c, 0x68, 0xf3, 0x25, 0xfa, 0x95, 0xcb, 0xac, 0xda, 0xdb,
	0x33, 0x8f, 0x46, 0x33, 0xc3, 0x8f, 0xc5, 0x64, 0x6c, 0xce, 0x43, 0x6b, 0x57, 0xc3, 0xa5, 0xbf,
	0xf6, 0x32, 0xf8, 0xfe, 0x6a, 0xbb, 0x74, 0x8b, 0xd1, 0x83, 0xbd, 0x8c, 0x7d, 0x27, 0x25, 0x06,
	0xdd, 0xe9, 0x6c, 0x15, 0x68, 0x30, 0x73, 0x72, 0x2c, 0x05, 0xfa, 0xa7, 0x57, 0xab, 0x3c, 0x0d,
	0x26, 0x24, 0x46, 0xf9, 0x01, 0x43, 0x7b, 0x3e, 0x35, 0xad, 0xf2, 0x5d, 0xdb, 0x54, 0xa4, 0x9f,
	0x31, 0xae, 0xce, 0x43, 0xdb, 0xff, 0xb2, 0xae, 0xe3, 0xda, 0x5c, 0xdb, 0x7f, 0x83, 0xa6, 0x42,
	0x7e, 0xc4, 0x68, 0x70, 0x7b, 0xdc, 0xb0, 0x9b, 0x2c, 0x59, 0xf1, 0xfa, 0xd5, 0xb4, 0x9b, 0xfe,
	0x7e, 0x4b, 0x7f, 0xfb, 0x18, 0xde, 0x35, 0x3f, 0xed, 0x0b, 0x6f, 0xfe, 0xd1, 0x5e, 0xdd, 0x0c,
	0x8f, 0x18, 0xd9, 0xbc, 0xd4, 0xad, 0xfb, 0x1d, 0x88, 0x91, 0x4d, 0x93, 0x67, 0xee, 0x92, 0x90,
	0x18, 0x9d, 0x29, 0x0b, 0x15, 0x68, 0x30, 0x3e, 0x31, 0xb2, 0x79, 0xcb, 0x33, 0x15, 0x6a, 0x30,
	0x0b, 0x62, 0x74, 0xa6, 0x2c, 0x54, 0xa4, 0xc1, 0x04, 0xc4, 0xc8, 0x66, 0xcc, 0x33, 0x35, 0xd3,
	0x60, 0xfe, 0x27, 0x46, 0x67, 0xca, 0x42, 0xc5, 0x1a, 0x8c, 0x24, 0x46, 0x77, 0x4f, 0x9e, 0xa9,
	0xb9, 0x06, 0x33, 0x23, 0x46, 0x67, 0xca, 0x42, 0xa1, 0x06, 0x13, 0x11, 0x23, 0x27, 0x38, 0x72,
	0xd3, 0x8d, 0x06, 0x73, 0x4b, 0x8e, 0x27, 0x57, 0x16, 0x2a, 0xd1, 0x60, 0x04, 0x39, 0x96, 0x09,
	0x42, 0xad, 0x16, 0x1a, 0x4c, 0x4c, 0x50, 0x73, 0x35, 0xaa, 0xa5, 0xcb, 0x0a, 0x46, 0xb9, 0x44,
	0xaf, 0x7e, 0x57, 0xb7, 0x1a, 0x4c, 0x42, 0x5e, 0xfd, 0x2e, 0x53, 0xf4, 0x6c, 0xa7, 0x84, 0x06,
	0xb3, 0xcc, 0xe4, 0x94, 0x99, 0x0b, 0x68, 0xb5, 0xe9, 0x2f, 0xc3, 0xdb, 0x48, 0x9e, 0xed, 0xd2,
	0x6f, 0x18, 0x4d, 0x95, 0x5c, 0xe0, 0xfc, 0xf1, 0x7e, 0xf7, 0x54, 0xd1, 0x71, 0xbd, 0x17, 0xff,
	0xc9, 0x19, 0xfa, 0xcf, 0xd5, 0x27, 0x01, 0x12, 0x31, 0xda, 0xdd, 0xad, 0xbf, 0x54, 0x47, 0xe1,
	0xc9, 0x39, 0x86, 0xfb, 0xc3, 0x66, 0xbd, 0x17, 0xbe, 0x8c, 0x31, 0xb8, 0xaf, 0x9e, 0x8f, 0x22,
	0x90, 0x09, 0xc6, 0x0f, 0x74, 0xd8, 0x3e, 0x6e, 0xbe, 0x1e, 0x45, 0xc8, 0x2d, 0x4f, 0xbb, 0x6d,
	0x75, 0x10, 0x51, 0x1d, 0xb9, 0xc7, 0x92, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x14, 0xe9,
	0x5a, 0x3c, 0x02, 0x00, 0x00,
}
